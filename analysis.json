{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<cosmoz-tab-card>` is a container element for a card. It should be used in conjunction with\n`cosmoz-tab` and `cosmoz-tabs`\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--cosmoz-tab-card-width` | Card width | `300px`\n`--cosmoz-tab-card` | Mixin applied to the card | `{}`\n`--cosmoz-tab-card-accordion` | Mixin applied to the card in accordion mode | `{}`\n`--cosmoz-tab-card-content` | Mixin applied to the card content | `{}`\n`--cosmoz-tab-card-content-accordion` | Mixin applied to the card content in accordion mode | `{}`\n`--cosmoz-tab-card-header` | Mixin applied to the card header | `{}`\n`--cosmoz-tab-card-header-accordion` | Mixin applied to the card header in accordion mode | `{}`",
      "summary": "",
      "path": "cosmoz-tab-card.js",
      "properties": [
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "The z-depth of this element, from 0-5.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 3
            },
            "end": {
              "line": 156,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeElevation",
          "description": "Computes `elevation` depending on the `according` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 1
            },
            "end": {
              "line": 167,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "accordion",
              "type": "String",
              "description": "The hex color"
            }
          ],
          "return": {
            "type": "Number",
            "desc": "The CSS style"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/card.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 168,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CosmozTabCard",
      "attributes": [
        {
          "name": "elevation",
          "description": "The z-depth of this element, from 0-5.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 3
            },
            "end": {
              "line": 156,
              "column": 4
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cosmoz-tab-card"
    },
    {
      "description": "`<cosmoz-tab>` is the container for a tab. It should be used in conjunction with\n`cosmoz-tabs`.\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--cosmoz-tab` | Mixin applied to the tab | `{}`\n`--cosmoz-tab-header` | Mixin applied to the tab header | `{}`\n`--cosmoz-tab-header-selected` | Mixin applied to the header when the tab is selected | `{}`\n`--cosmoz-tab-header-accordion` | Mixin applied to the header when the tab is in accordion mode | `{}`\n`--cosmoz-tab-header-accordion-selected` | Mixin applied to the header when the tab is selected in accordion mode | `{}`",
      "summary": "",
      "path": "cosmoz-tab.js",
      "properties": [
        {
          "name": "invalid",
          "type": "Boolean",
          "description": "get invalid - True if the element is `hidden` or `disabled`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 1
            },
            "end": {
              "line": 260,
              "column": 2
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "animated",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 1
            },
            "end": {
              "line": 264,
              "column": 2
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "hidden",
          "type": "boolean | null | undefined",
          "description": "If true, the item will be hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 3
            },
            "end": {
              "line": 193,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "If true, the item will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 3
            },
            "end": {
              "line": 203,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "selectable",
          "type": "string | null | undefined",
          "description": "Only items that match this CSS selector are selectable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 3
            },
            "end": {
              "line": 211,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"cosmoz-tab-card\""
        },
        {
          "name": "hasCards",
          "type": "boolean | null | undefined",
          "description": "True if the item contains cards.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 3
            },
            "end": {
              "line": 223,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 1
            },
            "end": {
              "line": 247,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 1
            },
            "end": {
              "line": 253,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 1
            },
            "end": {
              "line": 272,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasCards",
          "description": "Computes `hasCards` depending on `items`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 1
            },
            "end": {
              "line": 282,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "defaultValue": "this.items",
              "description": "Array of selectable items"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if items is not empty"
          }
        },
        {
          "name": "_notifyProperty",
          "description": "Observes changes to a property and dispatches a bubbling\n`tab-property-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 294,
              "column": 1
            },
            "end": {
              "line": 304,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "The name of the changed property"
            },
            {
              "name": "value",
              "type": "(String | Number | Object | *)",
              "description": "The value of the changed property."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "resizerShouldBeNotified",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 1
            },
            "end": {
              "line": 308,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resizable"
            }
          ]
        },
        {
          "name": "_onAccordionChangedRender",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 1
            },
            "end": {
              "line": 314,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "accordion"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/tab.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 315,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CosmozTab",
      "attributes": [
        {
          "name": "hidden",
          "description": "If true, the item will be hidden.",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 3
            },
            "end": {
              "line": 193,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "If true, the item will be disabled.",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 3
            },
            "end": {
              "line": 203,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selectable",
          "description": "Only items that match this CSS selector are selectable.",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 3
            },
            "end": {
              "line": 211,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-cards",
          "description": "True if the item contains cards.",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 3
            },
            "end": {
              "line": 223,
              "column": 4
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "tab-property-changed",
          "description": "Fired when `hidden`, `disabled`,'heading' or `badge` tab properties change.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hidden-changed",
          "description": "Fired when the `hidden` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-cards-changed",
          "description": "Fired when the `hasCards` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cosmoz-tab"
    },
    {
      "description": "`<cosmoz-tabs>` is a multi views (or pages) container element that allow navigation between the views\nusing tabs or an accordion.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tabs-selection-bar-color` | Color for the selection bar | `#00b4db`",
      "summary": "",
      "path": "cosmoz-tabs.js",
      "properties": [
        {
          "name": "attrForSelected",
          "type": "string | null | undefined",
          "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 3
            },
            "end": {
              "line": 149,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"name\""
        },
        {
          "name": "selectable",
          "type": "string | null | undefined",
          "description": "Only items that match this CSS selector are selectable.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 3
            },
            "end": {
              "line": 157,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"cosmoz-tab\""
        },
        {
          "name": "hashParam",
          "type": "string | null | undefined",
          "description": "The hash parameter to use for selecting an item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_routeHashParams",
          "type": "Object | null | undefined",
          "description": "The route hash parameters extracted by the `cosmoz-page-location`\nelement.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 3
            },
            "end": {
              "line": 173,
              "column": 4
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 1
            },
            "end": {
              "line": 186,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 1
            },
            "end": {
              "line": 195,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIcon",
          "description": "Computes icon for a tab.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 1
            },
            "end": {
              "line": 214,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "tab",
              "type": "HTMLElement",
              "description": "The tab to compute icon for"
            }
          ],
          "return": {
            "type": "String",
            "desc": "The icon to be used"
          }
        },
        {
          "name": "_computeIconStyle",
          "description": "Computes CSS style for the color of a tab.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 1
            },
            "end": {
              "line": 224,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "tab",
              "type": "HTMLElement",
              "description": "The tab to compute icon style for"
            }
          ],
          "return": {
            "type": "String",
            "desc": "The CSS style for the color of the tab"
          }
        },
        {
          "name": "_computeItemTabAttribute",
          "description": "Computes the attribute used by paper-tabs to select an item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 1
            },
            "end": {
              "line": 236,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "HTMLElement",
              "description": "The item to compute attribute for"
            },
            {
              "name": "index",
              "type": "Number",
              "description": "The item's index"
            },
            {
              "name": "attrForSelected",
              "type": "type",
              "description": "The `attrForSelected` value"
            }
          ],
          "return": {
            "type": "String",
            "desc": "The computed attribute"
          }
        },
        {
          "name": "_computeItemLink",
          "description": "Computes link for a item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 1
            },
            "end": {
              "line": 255,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "HTMLElement",
              "description": "The item to compute link for"
            },
            {
              "name": "hashParam",
              "type": "Object",
              "description": "The `hashParam` property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "The computed link"
          }
        },
        {
          "name": "_routeHashParamsChanged",
          "description": "Observes `_routeHashParams` changes\nand sets selection based on `hashParam`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 1
            },
            "end": {
              "line": 282,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changes",
              "type": "Object",
              "description": "changes to `_routeHashParams` property"
            },
            {
              "name": "hashParam",
              "type": "String",
              "description": "The `hashParam` property"
            },
            {
              "name": "items",
              "type": "String",
              "description": "The `items` property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelectedFromHashParamsDeferred",
          "description": "Defers the reading of the hash params until the element becomes visible\n\nVisibility change is determined by the element receiving an `iron-resize`\nevent.\n\nCan be called multiple times, the hash is read only once.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 1
            },
            "end": {
              "line": 296,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        },
        {
          "name": "_onIronResize",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 1
            },
            "end": {
              "line": 304,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateSelectedFromHashParams",
          "description": "Reads the hash params and updates the selected tab.\n\nThe hash param can be configured using the `hashParam` property.\nInvalid values are ignored.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 1
            },
            "end": {
              "line": 325,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectedItemChanged",
          "description": "Observers 'selectedItem' changes and updates\nlocation hash depending on 'hashParam'.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 1
            },
            "end": {
              "line": 348,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "(String | Number)",
              "description": "The selected item"
            },
            {
              "name": "hashParam",
              "type": "Object",
              "description": "The hash param"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFallbackSelection",
          "description": "Observe changes to `attrForSelected` and `items`\nand update `fallback` to point to the first item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 1
            },
            "end": {
              "line": 371,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attr",
              "type": "String",
              "description": "The attrForSelected property"
            },
            {
              "name": "items",
              "type": "Array",
              "description": "The items property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tabPropertyChanged",
          "description": "Listens to `tab-property-changed` event on a tab and\nnotifies about the change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 1
            },
            "end": {
              "line": 403,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "The tab-property-changed event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateInvalidSelection",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 405,
              "column": 1
            },
            "end": {
              "line": 420,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetInvalidFallbacks",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 1
            },
            "end": {
              "line": 426,
              "column": 2
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onLinkClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 1
            },
            "end": {
              "line": 434,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "resizerShouldNotify",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 1
            },
            "end": {
              "line": 438,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resizable"
            }
          ]
        },
        {
          "name": "resizerShouldBeNotified",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 1
            },
            "end": {
              "line": 442,
              "column": 2
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "resizable"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/router.html#/#tab=tab1",
          "description": "Router Demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 443,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CosmozTabs",
      "attributes": [
        {
          "name": "attr-for-selected",
          "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 3
            },
            "end": {
              "line": 149,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "selectable",
          "description": "Only items that match this CSS selector are selectable.",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 3
            },
            "end": {
              "line": 157,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hash-param",
          "description": "The hash parameter to use for selecting an item.",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 3
            },
            "end": {
              "line": 164,
              "column": 4
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cosmoz-tabs"
    }
  ],
  "metadata": {
    "polymer": {
      "behaviors": [
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbable-behavior.js",
          "properties": [
            {
              "name": "accordion",
              "type": "boolean | null | undefined",
              "description": "Toggles the accordion mode for the element.\nIf true the element allows multiple selections.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 2
                },
                "end": {
                  "line": 24,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "activateEvent",
              "type": "string | null | undefined",
              "description": "The event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "null"
            },
            {
              "name": "selectedClass",
              "type": "string | null | undefined",
              "description": "The class to set on elements when selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"cosmoz-selected\""
            },
            {
              "name": "selectedAttribute",
              "type": "string | null | undefined",
              "description": "The attribute to set on elements when selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 47,
                  "column": 2
                },
                "end": {
                  "line": 50,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"is-selected\""
            },
            {
              "name": "multi",
              "type": "string | null | undefined",
              "description": "If true, multiple selections are allowed.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 55,
                  "column": 2
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "selectedValues",
              "type": "Array | null | undefined",
              "description": "Gets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 2
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "selectedItems",
              "type": "Array | null | undefined",
              "description": "Returns an array of currently selected items.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 2
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Array"
                }
              }
            },
            {
              "name": "_isVisible",
              "type": "?",
              "description": "True if the current element is visible.\n\t\t",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 1
                },
                "end": {
                  "line": 258,
                  "column": 2
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 88,
                  "column": 1
                },
                "end": {
                  "line": 92,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 1
                },
                "end": {
                  "line": 98,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 1
                },
                "end": {
                  "line": 108,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_computeMulti",
              "description": "Computes the `multi` property depending on\n`accordion` value",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 1
                },
                "end": {
                  "line": 119,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "accordion",
                  "type": "Boolean",
                  "description": "The `accordion` property"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if accordion is true"
              }
            },
            {
              "name": "_onToggleTab",
              "description": "Handles the `cosmoz-tab-toggle` fired from an item\nand toggles selection on that item.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 1
                },
                "end": {
                  "line": 148,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "Event",
                  "description": "The `cosmoz-tab-toggle` event"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_forwardProperty",
              "description": "Forwards a property to all items.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 1
                },
                "end": {
                  "line": 162,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "String",
                  "description": "The name of the property"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "The value of the property"
                },
                {
                  "name": "items",
                  "type": "Array",
                  "description": "The items to forward property to"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_valueForItem",
              "description": "Computes the value for item depending on a attribute.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 171,
                  "column": 1
                },
                "end": {
                  "line": 182,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item",
                  "type": "HTMLElement",
                  "description": "The item to compute value for"
                },
                {
                  "name": "attr",
                  "type": "type",
                  "defaultValue": "this.attrForSelected",
                  "description": "The attribute used to compute the value"
                }
              ],
              "return": {
                "type": "(String | Number | void)",
                "desc": "The compute value"
              }
            },
            {
              "name": "_onIronSelect",
              "description": "Listens to `iron-select` event and fires\n`tab-first-select` and `tab-select` on the selected item.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 1
                },
                "end": {
                  "line": 218,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "Event",
                  "description": "The event object"
                }
              ],
              "return": {
                "type": "void",
                "desc": "description"
              }
            },
            {
              "name": "_toggleSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 220,
                  "column": 1
                },
                "end": {
                  "line": 222,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onTabActivate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 224,
                  "column": 1
                },
                "end": {
                  "line": 228,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "multiChanged",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 230,
                  "column": 1
                },
                "end": {
                  "line": 239,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "multi"
                },
                {
                  "name": "old"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_normalizeValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 241,
                  "column": 1
                },
                "end": {
                  "line": 251,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "resizerShouldBeNotified",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 260,
                  "column": 1
                },
                "end": {
                  "line": 262,
                  "column": 2
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_onDescendantIronResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 264,
                  "column": 1
                },
                "end": {
                  "line": 275,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "notifyResize",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 277,
                  "column": 1
                },
                "end": {
                  "line": 282,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 11,
              "column": 13
            },
            "end": {
              "line": 284,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TabbableBehaviorImpl",
          "attributes": [
            {
              "name": "accordion",
              "description": "Toggles the accordion mode for the element.\nIf true the element allows multiple selections.",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 2
                },
                "end": {
                  "line": 24,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "activate-event",
              "description": "The event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "selected-class",
              "description": "The class to set on elements when selected.",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "selected-attribute",
              "description": "The attribute to set on elements when selected.",
              "sourceRange": {
                "start": {
                  "line": 47,
                  "column": 2
                },
                "end": {
                  "line": 50,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "multi",
              "description": "If true, multiple selections are allowed.",
              "sourceRange": {
                "start": {
                  "line": 55,
                  "column": 2
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "selected-values",
              "description": "Gets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 2
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            },
            {
              "name": "selected-items",
              "description": "Returns an array of currently selected items.",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 2
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "Array | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "accordion-changed",
              "description": "Fired when the `accordion` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "selected-values-changed",
              "description": "Fired when the `selectedValues` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "selected-items-changed",
              "description": "Fired when the `selectedItems` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbable-behavior.js",
          "properties": [
            {
              "name": "_parentResizable",
              "type": "Object | null | undefined",
              "description": "The closest ancestor element that implements `IronResizableBehavior`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_parentResizableChanged\"",
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_notifyingDescendant",
              "type": "boolean | null | undefined",
              "description": "True if this element is currently notifying its descendant elements of\nresize.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 50,
                  "column": 4
                },
                "end": {
                  "line": 53,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "attrForSelected",
              "type": "string | null | undefined",
              "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 62,
                  "column": 4
                },
                "end": {
                  "line": 62,
                  "column": 48
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "null",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selected",
              "type": "(string | number)",
              "description": "Gets or sets the selected element. The default is to use the index of the\nitem.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 69,
                  "column": 4
                },
                "end": {
                  "line": 69,
                  "column": 42
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selectedItem",
              "type": "?Object",
              "description": "Returns the currently selected item.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 76,
                  "column": 4
                },
                "end": {
                  "line": 76,
                  "column": 62
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "activateEvent",
              "type": "string | null | undefined",
              "description": "The event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "null",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selectable",
              "type": "string | null | undefined",
              "description": "This is a CSS selector string.  If this is set, only items that match the\nCSS selector are selectable.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 90,
                  "column": 4
                },
                "end": {
                  "line": 90,
                  "column": 22
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selectedClass",
              "type": "string | null | undefined",
              "description": "The class to set on elements when selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"cosmoz-selected\"",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selectedAttribute",
              "type": "string | null | undefined",
              "description": "The attribute to set on elements when selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 47,
                  "column": 2
                },
                "end": {
                  "line": 50,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"is-selected\"",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "fallbackSelection",
              "type": "string | null | undefined",
              "description": "Default fallback if the selection based on selected with\n`attrForSelected` is not found.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 106,
                  "column": 4
                },
                "end": {
                  "line": 106,
                  "column": 50
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "null",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "items",
              "type": "Array | null | undefined",
              "description": "The list of items from which a selection can be made.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 111,
                  "column": 4
                },
                "end": {
                  "line": 118,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Array"
                }
              },
              "defaultValue": "[]",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_excludedLocalNames",
              "type": "Object | null | undefined",
              "description": "The set of excluded elements where the key is the `localName`\nof the element that will be ignored from the item list.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 126,
                  "column": 4
                },
                "end": {
                  "line": 136,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              },
              "defaultValue": "{\"template\":1,\"dom-bind\":1,\"dom-if\":1,\"dom-repeat\":1}",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_shouldUpdateSelection",
              "type": "?",
              "description": " UNUSED, FOR API COMPATIBILITY",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 75,
                  "column": 2
                },
                "end": {
                  "line": 78,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "multi",
              "type": "string | null | undefined",
              "description": "If true, multiple selections are allowed.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 55,
                  "column": 2
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true,
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selectedValues",
              "type": "Array | null | undefined",
              "description": "Gets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 2
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Array"
                }
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selectedItems",
              "type": "Array | null | undefined",
              "description": "Returns an array of currently selected items.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 2
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "readOnly": true,
                  "attributeType": "Array"
                }
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "accordion",
              "type": "boolean | null | undefined",
              "description": "Toggles the accordion mode for the element.\nIf true the element allows multiple selections.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 2
                },
                "end": {
                  "line": 24,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_isVisible",
              "type": "?",
              "description": "True if the current element is visible.\n\t\t",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 256,
                  "column": 1
                },
                "end": {
                  "line": 258,
                  "column": 2
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 88,
                  "column": 1
                },
                "end": {
                  "line": 92,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 1
                },
                "end": {
                  "line": 98,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 1
                },
                "end": {
                  "line": 108,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "notifyResize",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 277,
                  "column": 1
                },
                "end": {
                  "line": 282,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "assignParentResizable",
              "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 105,
                  "column": 2
                },
                "end": {
                  "line": 117,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "parentResizable"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "stopResizeNotificationsFor",
              "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 123,
                  "column": 2
                },
                "end": {
                  "line": 130,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_subscribeIronResize",
              "description": "Subscribe this element to listen to iron-resize events on the given target.\n\nPreferred over target.listen because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 140,
                  "column": 2
                },
                "end": {
                  "line": 142,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target",
                  "type": "!HTMLElement",
                  "description": "Element to listen to for iron-resize events."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_unsubscribeIronResize",
              "description": "Unsubscribe this element from listening to to iron-resize events on the\ngiven target.\n\nPreferred over target.unlisten because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 153,
                  "column": 2
                },
                "end": {
                  "line": 156,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target",
                  "type": "!HTMLElement",
                  "description": "Element to listen to for iron-resize events."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "resizerShouldNotify",
              "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 167,
                  "column": 2
                },
                "end": {
                  "line": 169,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element",
                  "type": "HTMLElement",
                  "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the `element` should be notified of resize."
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_onDescendantIronResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 264,
                  "column": 1
                },
                "end": {
                  "line": 275,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_fireResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 183,
                  "column": 2
                },
                "end": {
                  "line": 185,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_onIronRequestResizeNotifications",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 187,
                  "column": 2
                },
                "end": {
                  "line": 197,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_parentResizableChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 199,
                  "column": 2
                },
                "end": {
                  "line": 203,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "parentResizable"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_notifyDescendant",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 205,
                  "column": 2
                },
                "end": {
                  "line": 216,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "descendant"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_requestResizeNotifications",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 218,
                  "column": 2
                },
                "end": {
                  "line": 257,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_findParent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 259,
                  "column": 2
                },
                "end": {
                  "line": 271,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "indexOf",
              "description": "Returns the index of the given item.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 169,
                  "column": 2
                },
                "end": {
                  "line": 171,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item",
                  "type": "Object"
                }
              ],
              "return": {
                "desc": "Returns the index of the item"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "select",
              "description": "Selects the given value. If the `multi` property is true, then the selected\nstate of the `value` will be toggled; otherwise the `value` will be\nselected.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 61,
                  "column": 2
                },
                "end": {
                  "line": 67,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value",
                  "type": "(string | number)",
                  "description": "the value to select."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "selectPrevious",
              "description": "Selects the previous item.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 188,
                  "column": 2
                },
                "end": {
                  "line": 195,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selectNext",
              "description": "Selects the next item.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 202,
                  "column": 2
                },
                "end": {
                  "line": 209,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selectIndex",
              "description": "Selects the item at the given index.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 216,
                  "column": 2
                },
                "end": {
                  "line": 218,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "forceSynchronousItemUpdate",
              "description": "Force a synchronous update of the `items` property.\n\nNOTE: Consider listening for the `iron-items-changed` event to respond to\nupdates to the set of selectable items after updates to the DOM list and\nselection state have been made.\n\nWARNING: If you are using this method, you should probably consider an\nalternate approach. Synchronously querying for items is potentially\nslow for many use cases. The `items` property will update asynchronously\non its own to reflect selectable items in the DOM.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 232,
                  "column": 2
                },
                "end": {
                  "line": 244,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_checkFallback",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 251,
                  "column": 2
                },
                "end": {
                  "line": 253,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_addListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 255,
                  "column": 2
                },
                "end": {
                  "line": 257,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "eventName"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_removeListener",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 259,
                  "column": 2
                },
                "end": {
                  "line": 261,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "eventName"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_activateEventChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 263,
                  "column": 2
                },
                "end": {
                  "line": 266,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "eventName"
                },
                {
                  "name": "old"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_updateItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 268,
                  "column": 2
                },
                "end": {
                  "line": 272,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_updateAttrForSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 80,
                  "column": 2
                },
                "end": {
                  "line": 95,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "_updateSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 97,
                  "column": 2
                },
                "end": {
                  "line": 103,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "_selectSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 284,
                  "column": 2
                },
                "end": {
                  "line": 301,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "selected"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_filterItem",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 303,
                  "column": 2
                },
                "end": {
                  "line": 305,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_valueToItem",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 307,
                  "column": 2
                },
                "end": {
                  "line": 309,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_valueToIndex",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 311,
                  "column": 2
                },
                "end": {
                  "line": 321,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_indexToValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 323,
                  "column": 2
                },
                "end": {
                  "line": 332,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "index"
                }
              ],
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_valueForItem",
              "description": "Computes the value for item depending on a attribute.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 171,
                  "column": 1
                },
                "end": {
                  "line": 182,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item",
                  "type": "HTMLElement",
                  "description": "The item to compute value for"
                },
                {
                  "name": "attr",
                  "type": "type",
                  "defaultValue": "this.attrForSelected",
                  "description": "The attribute used to compute the value"
                }
              ],
              "return": {
                "type": "(String | Number | void)",
                "desc": "The compute value"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_applySelection",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 347,
                  "column": 2
                },
                "end": {
                  "line": 356,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item"
                },
                {
                  "name": "isSelected"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_selectionChange",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 130,
                  "column": 2
                },
                "end": {
                  "line": 144,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "_observeItems",
              "description": "observe items change under the given node.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 363,
                  "column": 2
                },
                "end": {
                  "line": 373,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "node"
                }
              ],
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_activateHandler",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 375,
                  "column": 2
                },
                "end": {
                  "line": 387,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "_itemActivate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 389,
                  "column": 2
                },
                "end": {
                  "line": 396,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                },
                {
                  "name": "item"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "multiChanged",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 230,
                  "column": 1
                },
                "end": {
                  "line": 239,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "multi"
                },
                {
                  "name": "old"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_selectMulti",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 105,
                  "column": 2
                },
                "end": {
                  "line": 128,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "values"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "_toggleSelected",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 220,
                  "column": 1
                },
                "end": {
                  "line": 222,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_valuesToItems",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-multi-selectable.js",
                "start": {
                  "line": 156,
                  "column": 2
                },
                "end": {
                  "line": 160,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "values"
                }
              ],
              "inheritedFrom": "IronMultiSelectableBehavior"
            },
            {
              "name": "_computeMulti",
              "description": "Computes the `multi` property depending on\n`accordion` value",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 117,
                  "column": 1
                },
                "end": {
                  "line": 119,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "accordion",
                  "type": "Boolean",
                  "description": "The `accordion` property"
                }
              ],
              "return": {
                "type": "Boolean",
                "desc": "True if accordion is true"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_onToggleTab",
              "description": "Handles the `cosmoz-tab-toggle` fired from an item\nand toggles selection on that item.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 129,
                  "column": 1
                },
                "end": {
                  "line": 148,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "Event",
                  "description": "The `cosmoz-tab-toggle` event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_forwardProperty",
              "description": "Forwards a property to all items.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 1
                },
                "end": {
                  "line": 162,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "property",
                  "type": "String",
                  "description": "The name of the property"
                },
                {
                  "name": "value",
                  "type": "*",
                  "description": "The value of the property"
                },
                {
                  "name": "items",
                  "type": "Array",
                  "description": "The items to forward property to"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_onIronSelect",
              "description": "Listens to `iron-select` event and fires\n`tab-first-select` and `tab-select` on the selected item.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 195,
                  "column": 1
                },
                "end": {
                  "line": 218,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e",
                  "type": "Event",
                  "description": "The event object"
                }
              ],
              "return": {
                "type": "void",
                "desc": "description"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_onTabActivate",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 224,
                  "column": 1
                },
                "end": {
                  "line": 228,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "e"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "_normalizeValue",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 241,
                  "column": 1
                },
                "end": {
                  "line": 251,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ],
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "resizerShouldBeNotified",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 260,
                  "column": 1
                },
                "end": {
                  "line": 262,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "inheritedFrom": "TabbableBehaviorImpl"
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 13
            },
            "end": {
              "line": 291,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TabbableBehavior",
          "attributes": [
            {
              "name": "attr-for-selected",
              "description": "If you want to use an attribute value or property of an element for\n`selected` instead of the index, set this to the name of the attribute\nor property. Hyphenated values are converted to camel case when used to\nlook up the property of a selectable element. Camel cased values are\n*not* converted to hyphenated values for attribute lookup. It's\nrecommended that you provide the hyphenated form of the name so that\nselection works in both cases. (Use `attr-or-property-name` instead of\n`attrOrPropertyName`.)",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 62,
                  "column": 4
                },
                "end": {
                  "line": 62,
                  "column": 48
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selected",
              "description": "Gets or sets the selected element. The default is to use the index of the\nitem.",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 69,
                  "column": 4
                },
                "end": {
                  "line": 69,
                  "column": 42
                }
              },
              "metadata": {},
              "type": "(string | number)",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selected-item",
              "description": "Returns the currently selected item.",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 76,
                  "column": 4
                },
                "end": {
                  "line": 76,
                  "column": 62
                }
              },
              "metadata": {},
              "type": "?Object",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "activate-event",
              "description": "The event that fires from items when they are selected. Selectable\nwill listen for this event from items and update the selection state.\nSet to empty string to listen to no events.",
              "sourceRange": {
                "start": {
                  "line": 31,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selectable",
              "description": "This is a CSS selector string.  If this is set, only items that match the\nCSS selector are selectable.",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 90,
                  "column": 4
                },
                "end": {
                  "line": 90,
                  "column": 22
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "selected-class",
              "description": "The class to set on elements when selected.",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 42,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selected-attribute",
              "description": "The attribute to set on elements when selected.",
              "sourceRange": {
                "start": {
                  "line": 47,
                  "column": 2
                },
                "end": {
                  "line": 50,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "fallback-selection",
              "description": "Default fallback if the selection based on selected with\n`attrForSelected` is not found.",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 106,
                  "column": 4
                },
                "end": {
                  "line": 106,
                  "column": 50
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "items",
              "description": "The list of items from which a selection can be made.",
              "sourceRange": {
                "file": "../@polymer/iron-selector/iron-selectable.js",
                "start": {
                  "line": 111,
                  "column": 4
                },
                "end": {
                  "line": 118,
                  "column": 5
                }
              },
              "metadata": {},
              "type": "Array | null | undefined",
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "name": "multi",
              "description": "If true, multiple selections are allowed.",
              "sourceRange": {
                "start": {
                  "line": 55,
                  "column": 2
                },
                "end": {
                  "line": 58,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selected-values",
              "description": "Gets or sets the selected elements. This is used instead of `selected` when `multi`\nis true.",
              "sourceRange": {
                "start": {
                  "line": 64,
                  "column": 2
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "Array | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "selected-items",
              "description": "Returns an array of currently selected items.",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 2
                },
                "end": {
                  "line": 81,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "Array | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "name": "accordion",
              "description": "Toggles the accordion mode for the element.\nIf true the element allows multiple selections.",
              "sourceRange": {
                "start": {
                  "line": 19,
                  "column": 2
                },
                "end": {
                  "line": 24,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbableBehaviorImpl"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "iron-activate",
              "description": "Fired when iron-selector is activated (selected or deselected).\nIt is fired before the selected items are changed.\nCancel the event to abort selection.",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "iron-deselect",
              "description": "Fired when an item is deselected",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "iron-items-changed",
              "description": "Fired when the list of selectable items changes (e.g., items are\nadded or removed). The detail of the event is a mutation record that\ndescribes what changed.",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "iron-select",
              "description": "Fired when an item is selected",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "selected-changed",
              "description": "Fired when the `selected` property changes.",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "selected-item-changed",
              "description": "Fired when the `selectedItem` property changes.",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "items-changed",
              "description": "Fired when the `items` property changes.",
              "metadata": {},
              "inheritedFrom": "IronSelectableBehavior"
            },
            {
              "type": "CustomEvent",
              "name": "selected-values-changed",
              "description": "Fired when the `selectedValues` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "selected-items-changed",
              "description": "Fired when the `selectedItems` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbableBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "accordion-changed",
              "description": "Fired when the `accordion` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbableBehaviorImpl"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbed-behavior.js",
          "properties": [
            {
              "name": "isSelected",
              "type": "boolean | null | undefined",
              "description": "Item selection state, true if it is selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_animatedSelectedChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "isActive",
              "type": "boolean | null | undefined",
              "description": "Is true when the item has been selected at least once.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 44,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "accordion",
              "type": "boolean | null | undefined",
              "description": "Accordion mode element state, true if it is in accordion mode.\nShould be forwarded by a `Cosmoz.TabbableBehavior` ancestor\nelement.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 2
                },
                "end": {
                  "line": 56,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "heading",
              "type": "string | null | undefined",
              "description": "Item heading text.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 2
                },
                "end": {
                  "line": 64,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              }
            },
            {
              "name": "icon",
              "type": "string | null | undefined",
              "description": "Icon name of the item.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 2
                },
                "end": {
                  "line": 72,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"radio-button-unchecked\""
            },
            {
              "name": "selectedIcon",
              "type": "string | null | undefined",
              "description": "Icon name of the item when it is selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 2
                },
                "end": {
                  "line": 80,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"radio-button-checked\""
            },
            {
              "name": "iconColor",
              "type": "string | null | undefined",
              "description": "Color of the item icon.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 2
                },
                "end": {
                  "line": 88,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"#15b0d3\""
            },
            {
              "name": "badge",
              "type": "string | null | undefined",
              "description": "When not empty the element will contain a `paper-bagde` with the\nlabel set to this property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 2
                },
                "end": {
                  "line": 98,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\""
            },
            {
              "name": "animating",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 2
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            },
            {
              "name": "animated",
              "type": "?",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 1
                },
                "end": {
                  "line": 117,
                  "column": 2
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              }
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 1
                },
                "end": {
                  "line": 109,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 1
                },
                "end": {
                  "line": 113,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_animatedSelectedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 119,
                  "column": 1
                },
                "end": {
                  "line": 143,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isSelected"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onSelectedTransitionEnd",
              "description": "Listener for `transitionend` event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 150,
                  "column": 1
                },
                "end": {
                  "line": 160,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_computeOpenedIcon",
              "description": "Computes the element opened icon name depending on the `opened`\nproperty.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 1
                },
                "end": {
                  "line": 171,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isSelected",
                  "type": "boolean",
                  "description": "Whether tab is opened or not."
                }
              ],
              "return": {
                "type": "string",
                "desc": "Opened icon name."
              }
            },
            {
              "name": "getIcon",
              "description": "Gets the element icon name.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 178,
                  "column": 1
                },
                "end": {
                  "line": 180,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "string",
                "desc": "Name of the element icon."
              }
            },
            {
              "name": "getIconStyle",
              "description": "Gets the element icon style property and value if icon color is\nset, otherwise return nothing.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 188,
                  "column": 1
                },
                "end": {
                  "line": 192,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "string/void",
                "desc": "Style color property and value for the icon."
              }
            },
            {
              "name": "_onToggleTap",
              "description": "Triggers a `cosmoz-tab-toggle` event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 200,
                  "column": 1
                },
                "end": {
                  "line": 202,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 5,
              "column": 13
            },
            "end": {
              "line": 203,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TabbedBehaviorImpl",
          "attributes": [
            {
              "name": "is-selected",
              "description": "Item selection state, true if it is selected.",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "is-active",
              "description": "Is true when the item has been selected at least once.",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 44,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "accordion",
              "description": "Accordion mode element state, true if it is in accordion mode.\nShould be forwarded by a `Cosmoz.TabbableBehavior` ancestor\nelement.",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 2
                },
                "end": {
                  "line": 56,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "heading",
              "description": "Item heading text.",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 2
                },
                "end": {
                  "line": 64,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "icon",
              "description": "Icon name of the item.",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 2
                },
                "end": {
                  "line": 72,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "selected-icon",
              "description": "Icon name of the item when it is selected.",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 2
                },
                "end": {
                  "line": 80,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "icon-color",
              "description": "Color of the item icon.",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 2
                },
                "end": {
                  "line": 88,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "badge",
              "description": "When not empty the element will contain a `paper-bagde` with the\nlabel set to this property.",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 2
                },
                "end": {
                  "line": 98,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined"
            },
            {
              "name": "animating",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 2
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "cosmoz-tab-toggle",
              "description": "Fired when the element should have the selection state toggled.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "tab-first-select",
              "description": "Fired when the element is being selected for the first time.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "tab-select",
              "description": "Fired when the element is being selected.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "is-selected-changed",
              "description": "Fired when the `isSelected` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "is-active-changed",
              "description": "Fired when the `isActive` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "accordion-changed",
              "description": "Fired when the `accordion` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "heading-changed",
              "description": "Fired when the `heading` property changes.",
              "metadata": {}
            },
            {
              "type": "CustomEvent",
              "name": "badge-changed",
              "description": "Fired when the `badge` property changes.",
              "metadata": {}
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbed-behavior.js",
          "properties": [
            {
              "name": "_parentResizable",
              "type": "Object | null | undefined",
              "description": "The closest ancestor element that implements `IronResizableBehavior`.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 41,
                  "column": 4
                },
                "end": {
                  "line": 44,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_parentResizableChanged\"",
                  "attributeType": "Object"
                }
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_notifyingDescendant",
              "type": "boolean | null | undefined",
              "description": "True if this element is currently notifying its descendant elements of\nresize.",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 50,
                  "column": 4
                },
                "end": {
                  "line": 53,
                  "column": 5
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "isSelected",
              "type": "boolean | null | undefined",
              "description": "Item selection state, true if it is selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "observer": "\"_animatedSelectedChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "isActive",
              "type": "boolean | null | undefined",
              "description": "Is true when the item has been selected at least once.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 44,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "accordion",
              "type": "boolean | null | undefined",
              "description": "Accordion mode element state, true if it is in accordion mode.\nShould be forwarded by a `Cosmoz.TabbableBehavior` ancestor\nelement.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 2
                },
                "end": {
                  "line": 56,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "heading",
              "type": "string | null | undefined",
              "description": "Item heading text.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 2
                },
                "end": {
                  "line": 64,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "icon",
              "type": "string | null | undefined",
              "description": "Icon name of the item.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 2
                },
                "end": {
                  "line": 72,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"radio-button-unchecked\"",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "selectedIcon",
              "type": "string | null | undefined",
              "description": "Icon name of the item when it is selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 2
                },
                "end": {
                  "line": 80,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"radio-button-checked\"",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "iconColor",
              "type": "string | null | undefined",
              "description": "Color of the item icon.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 2
                },
                "end": {
                  "line": 88,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"#15b0d3\"",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "badge",
              "type": "string | null | undefined",
              "description": "When not empty the element will contain a `paper-bagde` with the\nlabel set to this property.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 2
                },
                "end": {
                  "line": 98,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "notify": true,
                  "attributeType": "String"
                }
              },
              "defaultValue": "\"\"",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "animating",
              "type": "boolean | null | undefined",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 2
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "animated",
              "type": "?",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 115,
                  "column": 1
                },
                "end": {
                  "line": 117,
                  "column": 2
                }
              },
              "metadata": {
                "polymer": {
                  "readOnly": true
                }
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 107,
                  "column": 1
                },
                "end": {
                  "line": 109,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 68,
                  "column": 2
                },
                "end": {
                  "line": 70,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 111,
                  "column": 1
                },
                "end": {
                  "line": 113,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "notifyResize",
              "description": "Can be called to manually notify a resizable and its descendant\nresizables of a resize change.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 87,
                  "column": 2
                },
                "end": {
                  "line": 99,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "assignParentResizable",
              "description": "Used to assign the closest resizable ancestor to this resizable\nif the ancestor detects a request for notifications.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 105,
                  "column": 2
                },
                "end": {
                  "line": 117,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "parentResizable"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "stopResizeNotificationsFor",
              "description": "Used to remove a resizable descendant from the list of descendants\nthat should be notified of a resize change.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 123,
                  "column": 2
                },
                "end": {
                  "line": 130,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_subscribeIronResize",
              "description": "Subscribe this element to listen to iron-resize events on the given target.\n\nPreferred over target.listen because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 140,
                  "column": 2
                },
                "end": {
                  "line": 142,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target",
                  "type": "!HTMLElement",
                  "description": "Element to listen to for iron-resize events."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_unsubscribeIronResize",
              "description": "Unsubscribe this element from listening to to iron-resize events on the\ngiven target.\n\nPreferred over target.unlisten because the property renamer does not\nunderstand to rename when the target is not specifically \"this\"",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 153,
                  "column": 2
                },
                "end": {
                  "line": 156,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "target",
                  "type": "!HTMLElement",
                  "description": "Element to listen to for iron-resize events."
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "resizerShouldNotify",
              "description": "This method can be overridden to filter nested elements that should or\nshould not be notified by the current element. Return true if an element\nshould be notified, or false if it should not be notified.",
              "privacy": "public",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 167,
                  "column": 2
                },
                "end": {
                  "line": 169,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "element",
                  "type": "HTMLElement",
                  "description": "A candidate descendant element that\nimplements `IronResizableBehavior`."
                }
              ],
              "return": {
                "type": "boolean",
                "desc": "True if the `element` should be notified of resize."
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_onDescendantIronResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 171,
                  "column": 2
                },
                "end": {
                  "line": 181,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_fireResize",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 183,
                  "column": 2
                },
                "end": {
                  "line": 185,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_onIronRequestResizeNotifications",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 187,
                  "column": 2
                },
                "end": {
                  "line": 197,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "event"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_parentResizableChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 199,
                  "column": 2
                },
                "end": {
                  "line": 203,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "parentResizable"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_notifyDescendant",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 205,
                  "column": 2
                },
                "end": {
                  "line": 216,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "descendant"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_requestResizeNotifications",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 218,
                  "column": 2
                },
                "end": {
                  "line": 257,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_findParent",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "file": "../@polymer/iron-resizable-behavior/iron-resizable-behavior.js",
                "start": {
                  "line": 259,
                  "column": 2
                },
                "end": {
                  "line": 271,
                  "column": 3
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "IronResizableBehavior"
            },
            {
              "name": "_animatedSelectedChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 119,
                  "column": 1
                },
                "end": {
                  "line": 143,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isSelected"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "_onSelectedTransitionEnd",
              "description": "Listener for `transitionend` event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 150,
                  "column": 1
                },
                "end": {
                  "line": 160,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "_computeOpenedIcon",
              "description": "Computes the element opened icon name depending on the `opened`\nproperty.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 169,
                  "column": 1
                },
                "end": {
                  "line": 171,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isSelected",
                  "type": "boolean",
                  "description": "Whether tab is opened or not."
                }
              ],
              "return": {
                "type": "string",
                "desc": "Opened icon name."
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "getIcon",
              "description": "Gets the element icon name.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 178,
                  "column": 1
                },
                "end": {
                  "line": 180,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "string",
                "desc": "Name of the element icon."
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "getIconStyle",
              "description": "Gets the element icon style property and value if icon color is\nset, otherwise return nothing.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 188,
                  "column": 1
                },
                "end": {
                  "line": 192,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "string/void",
                "desc": "Style color property and value for the icon."
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "_onToggleTap",
              "description": "Triggers a `cosmoz-tab-toggle` event.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 200,
                  "column": 1
                },
                "end": {
                  "line": 202,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedBehaviorImpl"
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 13
            },
            "end": {
              "line": 209,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TabbedBehavior",
          "attributes": [
            {
              "name": "is-selected",
              "description": "Item selection state, true if it is selected.",
              "sourceRange": {
                "start": {
                  "line": 28,
                  "column": 2
                },
                "end": {
                  "line": 34,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "is-active",
              "description": "Is true when the item has been selected at least once.",
              "sourceRange": {
                "start": {
                  "line": 39,
                  "column": 2
                },
                "end": {
                  "line": 44,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "accordion",
              "description": "Accordion mode element state, true if it is in accordion mode.\nShould be forwarded by a `Cosmoz.TabbableBehavior` ancestor\nelement.",
              "sourceRange": {
                "start": {
                  "line": 51,
                  "column": 2
                },
                "end": {
                  "line": 56,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "heading",
              "description": "Item heading text.",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 2
                },
                "end": {
                  "line": 64,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "icon",
              "description": "Icon name of the item.",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 2
                },
                "end": {
                  "line": 72,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "selected-icon",
              "description": "Icon name of the item when it is selected.",
              "sourceRange": {
                "start": {
                  "line": 77,
                  "column": 2
                },
                "end": {
                  "line": 80,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "icon-color",
              "description": "Color of the item icon.",
              "sourceRange": {
                "start": {
                  "line": 85,
                  "column": 2
                },
                "end": {
                  "line": 88,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "badge",
              "description": "When not empty the element will contain a `paper-bagde` with the\nlabel set to this property.",
              "sourceRange": {
                "start": {
                  "line": 94,
                  "column": 2
                },
                "end": {
                  "line": 98,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "string | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "name": "animating",
              "description": "",
              "sourceRange": {
                "start": {
                  "line": 100,
                  "column": 2
                },
                "end": {
                  "line": 104,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbedBehaviorImpl"
            }
          ],
          "events": [
            {
              "type": "CustomEvent",
              "name": "cosmoz-tab-toggle",
              "description": "Fired when the element should have the selection state toggled.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "tab-first-select",
              "description": "Fired when the element is being selected for the first time.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "tab-select",
              "description": "Fired when the element is being selected.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "is-selected-changed",
              "description": "Fired when the `isSelected` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "is-active-changed",
              "description": "Fired when the `isActive` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "accordion-changed",
              "description": "Fired when the `accordion` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "heading-changed",
              "description": "Fired when the `heading` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            },
            {
              "type": "CustomEvent",
              "name": "badge-changed",
              "description": "Fired when the `badge` property changes.",
              "metadata": {},
              "inheritedFrom": "TabbedBehaviorImpl"
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbed-template-behavior.js",
          "properties": [
            {
              "name": "prerender",
              "type": "boolean | null | undefined",
              "description": "Set to true to render the template with a small delay even if the tab has never been selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 15,
                  "column": 2
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_prerenderChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 1
                },
                "end": {
                  "line": 24,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 26,
                  "column": 1
                },
                "end": {
                  "line": 28,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 30,
                  "column": 1
                },
                "end": {
                  "line": 39,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_onNodesChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 41,
                  "column": 1
                },
                "end": {
                  "line": 59,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "render",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 1
                },
                "end": {
                  "line": 71,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_prerenderChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 73,
                  "column": 1
                },
                "end": {
                  "line": 78,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prerender"
                }
              ],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_createInstance",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 80,
                  "column": 1
                },
                "end": {
                  "line": 88,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              }
            },
            {
              "name": "_forwardHostProp",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 90,
                  "column": 1
                },
                "end": {
                  "line": 97,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop"
                },
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 13
            },
            "end": {
              "line": 98,
              "column": 1
            }
          },
          "privacy": "public",
          "name": "TabbedTemplateBehaviorImpl",
          "attributes": [
            {
              "name": "prerender",
              "description": "Set to true to render the template with a small delay even if the tab has never been selected.",
              "sourceRange": {
                "start": {
                  "line": 15,
                  "column": 2
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        },
        {
          "description": "",
          "summary": "",
          "path": "cosmoz-tabbed-template-behavior.js",
          "properties": [
            {
              "name": "prerender",
              "type": "boolean | null | undefined",
              "description": "Set to true to render the template with a small delay even if the tab has never been selected.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 15,
                  "column": 2
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_prerenderChanged\"",
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false",
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            }
          ],
          "methods": [
            {
              "name": "created",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 22,
                  "column": 1
                },
                "end": {
                  "line": 24,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "attached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 26,
                  "column": 1
                },
                "end": {
                  "line": 28,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "detached",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 30,
                  "column": 1
                },
                "end": {
                  "line": 39,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "_onNodesChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 41,
                  "column": 1
                },
                "end": {
                  "line": 59,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "render",
              "description": "",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 61,
                  "column": 1
                },
                "end": {
                  "line": 71,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "_prerenderChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 73,
                  "column": 1
                },
                "end": {
                  "line": 78,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prerender"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "_createInstance",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 80,
                  "column": 1
                },
                "end": {
                  "line": 88,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            },
            {
              "name": "_forwardHostProp",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 90,
                  "column": 1
                },
                "end": {
                  "line": 97,
                  "column": 2
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "prop"
                },
                {
                  "name": "value"
                }
              ],
              "return": {
                "type": "void"
              },
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 13
            },
            "end": {
              "line": 101,
              "column": 66
            }
          },
          "privacy": "public",
          "name": "TabbedTemplateBehavior",
          "attributes": [
            {
              "name": "prerender",
              "description": "Set to true to render the template with a small delay even if the tab has never been selected.",
              "sourceRange": {
                "start": {
                  "line": 15,
                  "column": 2
                },
                "end": {
                  "line": 19,
                  "column": 3
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined",
              "inheritedFrom": "TabbedTemplateBehaviorImpl"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  }
}
